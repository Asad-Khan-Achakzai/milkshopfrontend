{"version":3,"sources":["./src/app/util/constant.ts","./src/app/web-services/alert.service.ts","./src/app/web-services/user.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\n\nexport class Constant {\n    public static ITEM_PER_PAGE = 10;\n    public static LEAVE_NUMBER_OF_DAYS = 90;\n    public static FIRST_PAGE = 0;\n    public static LRMSFrontEndURL=\"http://localhost:4200\"\n    //public static BASE_URL = 'https://devbe.hive-worx.com:8443/LRMS/Hive-Worx/';\n    public static BASE_URL = 'http://localhost:3000/';\n    public static TOKEN_EXPIRE_TIME = 240000;\n   \n    public static UMS_URL = \"https://devbe.hive-worx.com:8443/LRUMS/rest/ums/\";\n\n    public static campusLocation = \"https://www.google.com/maps?q=2805+Campus+dr,+Plymouth++MN+55441\";\n    public static URL_REGEXP = '/^[A-Za-z][A-Za-z\\d.+-]*:\\/*(?:\\w+(?::\\w+)?@)?[^\\s/]+(?::\\d+)?(?:\\/[\\w#!:.?+=&%@\\-/]*)?$/'\n    public static handleError(error: HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n            console.error('An error occurred:', error.error.message);\n        } else {\n            // The backend returned an unsuccessful response code.\n            // The response body may contain clues as to what went wrong,\n            console.error(\n                `Backend returned code ${error.status}, ` +\n                `body was: ${error.error}`);\n        }\n        // return an observable with a user-facing error message\n        return throwError(\n            'Something bad happened; please try again later.');\n    }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n  constructor(private _snackBar: MatSnackBar,private toastr: ToastrService) {\n\n  }\n\n  // constructor() {\n\n  // }\n\n  showSuccess(victim:any, operationType:any) {\n    this._snackBar.open('Your ' + operationType + \" \" + ' request for ' + victim + ' is completed successfully', null, {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: 4000,\n      panelClass: ['green-snackbar']\n    });   \n   \n        // this.toastr.success('Your ' + operationType + \" \" + ' request for ' + victim + ' is completed successfully', null, {\n        //   tapToDismiss: false,\n        //   closeButton: true,\n        //   timeOut: 2000,\n        //   positionClass: \"toast-top-center\"\n        // });\n  }\n  showSuccessLogin(Message) {\n    this._snackBar.open(Message, null, {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: 4000,\n      panelClass: ['green-snackbar']\n    });  }\n  showFalure(message:any) {\n    this._snackBar.open(message, null, {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: 4000,\n      panelClass: ['red-snackbar']\n    }); \n    // this.toastr.error(message, null, {\n    //   tapToDismiss: false,\n    //   closeButton: true,\n    //   timeOut: 5000,\n    //   positionClass: \"toast-top-center\"\n    // });\n}\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Constant } from '../util/constant';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n@Injectable({ providedIn: 'root'})\r\nexport class UserService {\r\n httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\nconstructor(private httpClient: HttpClient) {};\r\naddUser (user:any ):Observable<string> {\r\nreturn this.httpClient.post<string>(Constant.BASE_URL + \"managers/add\", user).pipe(retry(3),catchError(Constant.handleError));\r\n}\r\nupdateUser (user :any):Observable<string> {\r\n    let _id = user._id;\r\nreturn this.httpClient.put<string>(Constant.BASE_URL + `managers/${_id}`, user, this.httpOptions).pipe(retry(3),catchError(Constant.handleError));\r\n}\r\nfindAllUser (user :any,pageNo :number ,usersPerPage :number ):Observable<string[]> {\r\nreturn this.httpClient.post<string[]>(Constant.BASE_URL + \"managers/all\",user).pipe(retry(3),catchError(Constant.handleError));\r\n}\r\nloginUser (user :any ):Observable<string[]> {\r\n    return this.httpClient.post<string[]>(Constant.BASE_URL + \"managers/login\",user).pipe(retry(3),catchError(Constant.handleError));\r\n    }\r\ndeleteByIdUser (userId:any ):Observable<string> {\r\n    let _id = userId;\r\nreturn this.httpClient.delete<string>(Constant.BASE_URL + `managers/${_id}`, this.httpOptions).pipe(retry(3),catchError(Constant.handleError));\r\n}\r\ncountUser (user:any ):Observable<number> {\r\nreturn this.httpClient.post<number>(Constant.BASE_URL + \"manager/count\", {\"user\": user } , this.httpOptions).pipe(retry(3),catchError(Constant.handleError));\r\n}\r\n\r\n}"],"sourceRoot":"webpack:///"}